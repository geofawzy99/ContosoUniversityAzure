@model ContosoUniversity.DAL.SalesModel.Book
@{
	ViewBag.Title = "Books";
}

<ul class="breadcrumb">
	<li><a href="\">Tables</a> <span class="divider">/</span></li>
	<li class="active">Books</li>
</ul>

@{
    Func<string, object> routeValuesSortBy = (sortBy) => new {
        page = ViewBag.Page,
        pageSize = ViewBag.PageSize,
        sortBy = sortBy,
        sortDesc = ViewBag.SortBy != sortBy || ViewBag.SortDesc != null && ViewBag.SortDesc == true ? null : (object)true
        ,
        PublisherId = ViewBag.PublisherId
    };

    Func<int, object> routeValuesPage = (page) => new {
        page = page,
        pageSize = ViewBag.PageSize,
        sortBy = ViewBag.SortBy,
        sortDesc = ViewBag.SortDesc
        ,
        PublisherId = ViewBag.PublisherId
    };

    Func<object, string> formatValue = (value) => {
        if (value == null)
            return string.Empty;
        string strValue = Convert.ToString(value);
        if (strValue.Length > 20)
            strValue = strValue.Substring(0, 20) + "...";
        return strValue;
    };
}

<script type="text/javascript">
	function submitFilterForm(index, value) {
		var f = document.getElementById('filterform');
		f.elements[index].value = value;
		f.submit();
	}
</script>

<div class="row">
	<div class="span8">
		<form id="filterform" method="GET">
			<input type="hidden" name="PublisherId" value="@ViewBag.PublisherId">
			<div class="btn-group">
@if (ViewBag.SelectedPublisher == null) {
				<a class="btn dropdown-toggle" data-toggle="dropdown" href="#"><small>Publisher</small> <span class="caret"></span></a>
}
else {
				<a class="btn dropdown-toggle" data-toggle="dropdown" href="#"><small>Publisher: <strong>@formatValue(ViewBag.SelectedPublisher)</strong></small> <span class="caret"></span></a>
}
				<ul class="dropdown-menu">
@foreach (SelectListItem item in ViewBag.Publishers) {
					<li><a href="javascript:{}" onclick="submitFilterForm(0, '@item.Value');">@(item.Text ?? "[All]")</a></li>
}
				</ul>
			</div>
		</form>
	</div>
	<div class="span4">
		@Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary pull-right" })
	</div>
</div>

<table class="table table-bordered table-striped table-condensed table-hover">
	<thead>
        <tr>
            <th></th>
            <th>
                <a href="@Url.Action("Index", routeValuesSortBy("ArDescription"))"><small>@Html.DisplayNameFor(model => model.ArDescription)</small></a>
            </th>
            <th>
                <a href="@Url.Action("Index", routeValuesSortBy("EnDescription"))"><small>@Html.DisplayNameFor(model => model.EnDescription)</small></a>
            </th>
            <th>
                <a href="@Url.Action("Index", routeValuesSortBy("Category"))"><small>@Html.DisplayNameFor(model => model.Category)</small></a>
            </th>
            <th>
                <a href="@Url.Action("Index", routeValuesSortBy("Price"))"><small>@Html.DisplayNameFor(model => model.Price)</small></a>
            </th>
            <th>
                <a href="@Url.Action("Index", routeValuesSortBy("ISBN"))"><small>@Html.DisplayNameFor(model => model.ISBN)</small></a>
            </th>
            <th>
                <a href="@Url.Action("Index", routeValuesSortBy("Publisher"))"><small>@Html.DisplayNameFor(model => model.PublisherId)</small></a>
            </th>
            <th>
                <a href="@Url.Action("Index", routeValuesSortBy("Langauge"))"><small>@Html.DisplayNameFor(model => model.Langauge)</small></a>
            </th>
        </tr>
	</thead>
@foreach (var item in ViewBag.Entities) {
    <tr>
        <td>
            @Html.ActionLink("Edit", "Edit", new { Id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { Id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { Id = item.Id })
        </td>
        <td>
            <small>@formatValue(item.ArDescription)</small>
        </td>
        <td>
            <small>@formatValue(item.EnDescription)</small>
        </td>
        <td>
            <small>@formatValue(item.Category)</small>
        </td>
        <td>
            <small>@formatValue(item.Price)</small>
        </td>
        <td>
            <small>@formatValue(item.ISBN)</small>
        </td>
        <td>
            @if (item.Publisher != null)
            {
                <small>@formatValue(item.Publisher.Name)</small>
            }
            else
            {
                <small>""</small>
            }
        </td>
        <td>
            <small>@formatValue(item.Langauge)</small>
        </td>
    </tr>
}
</table>

@if (ViewBag.PaginationData != null) {
	int currentPage = ViewData.ContainsKey("Page") ? ViewBag.Page : 1;
<div>
	<ul class="pagination pagination-centered pagination-small">
	@foreach (Tuple<string, bool, int> pageTuple in ViewBag.PaginationData) {
		if (!pageTuple.Item2) {
			<li class="disabled"><span>@pageTuple.Item1</span></li>
		}
		else if (pageTuple.Item3 == currentPage) {
			<li class="active"><span>@pageTuple.Item1</span></li>
		}
		else {
			 <li ><a href="@Url.Action("Index", routeValuesPage(pageTuple.Item3))">@pageTuple.Item1</a></li>
		}
	}
	</ul>
</div>
}
