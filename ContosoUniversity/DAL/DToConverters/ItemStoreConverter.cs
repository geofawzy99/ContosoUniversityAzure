//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 25/11/2018 12:35:51 م
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace ContosoUniversity.DAL.SalesModel.Dto
{

    public static partial class ItemStoreConverter
    {

        public static ItemStoreDto ToDto(this ContosoUniversity.DAL.SalesModel.ItemStore source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static ItemStoreDto ToDtoWithRelated(this ContosoUniversity.DAL.SalesModel.ItemStore source, int level)
        {
            if (source == null)
              return null;

            var target = new ItemStoreDto();

            // Properties
            target.Id = source.Id;
            target.MinLimit = source.MinLimit;
            target.MaxLimit = source.MaxLimit;
            target.Quantity = source.Quantity;
            target.ItemId = source.ItemId;
            target.StoreId = source.StoreId;

            // Navigation Properties
            if (level > 0) {
              target.Item = source.Item.ToDtoWithRelated(level - 1);
              target.Store = source.Store.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static ContosoUniversity.DAL.SalesModel.ItemStore ToEntity(this ItemStoreDto source)
        {
            if (source == null)
              return null;

            var target = new ContosoUniversity.DAL.SalesModel.ItemStore();

            // Properties
            target.Id = source.Id;
            target.MinLimit = source.MinLimit;
            target.MaxLimit = source.MaxLimit;
            target.Quantity = source.Quantity;
            target.ItemId = source.ItemId;
            target.StoreId = source.StoreId;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<ItemStoreDto> ToDtos(this IEnumerable<ContosoUniversity.DAL.SalesModel.ItemStore> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<ItemStoreDto> ToDtosWithRelated(this IEnumerable<ContosoUniversity.DAL.SalesModel.ItemStore> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<ContosoUniversity.DAL.SalesModel.ItemStore> ToEntities(this IEnumerable<ItemStoreDto> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(ContosoUniversity.DAL.SalesModel.ItemStore source, ItemStoreDto target);

        static partial void OnEntityCreating(ItemStoreDto source, ContosoUniversity.DAL.SalesModel.ItemStore target);

    }

}
